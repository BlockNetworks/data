async function encrypt(t,e){if(!t||!e)return"";"string"!=typeof t&&(t=JSON.stringify(t));let n=(new TextEncoder).encode(e);n.length>32&&(n=n.slice(0,32)),n.length<32&&(n=new Uint8Array(Array.from(n).concat(new Array(32-n.length).fill(0))));const r=await window.crypto.subtle.importKey("raw",n,{name:"AES-GCM",length:256},!0,["encrypt","decrypt"]),i=window.crypto.getRandomValues(new Uint8Array(12)),c=await window.crypto.subtle.encrypt({name:"AES-GCM",iv:i},r,(new TextEncoder).encode(t).buffer);return JSON.stringify({data:new Uint8Array(c).toString(),iv:i.toString()})}async function decrypt(t,e){if(!t||!e)return"";switch(typeof t){case"string":try{t=JSON.parse(t)}catch(t){return""}case"object":break;default:return""}if(void 0===t.data||void 0===t.iv)return"";let n=(new TextEncoder).encode(e);n.length>32&&(n=n.slice(0,32)),n.length<32&&(n=new Uint8Array(Array.from(n).concat(new Array(32-n.length).fill(0))));const r=new Uint8Array(t.iv.split(",")),i=await window.crypto.subtle.importKey("raw",n,{name:"AES-GCM",length:256},!0,["encrypt","decrypt"]),c=await window.crypto.subtle.decrypt({name:"AES-GCM",iv:r},i,new Uint8Array(t.data.split(",")).buffer);return(new TextDecoder).decode(new Uint8Array(c))}const Encryption={encrypt:encrypt,decrypt:decrypt};export default Encryption;
